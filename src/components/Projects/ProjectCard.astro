---
import TagProjectPill from "./TagProjectPill.astro";
const {title, description, tags} = Astro.props;

// Handle both string and object formats for title and description
const getTitle = (title) => {
  if (typeof title === 'string') return title;
  return title?.en || ''; // Default to English if object format
};

const getDescription = (description) => {
  if (typeof description === 'string') return description;
  return description?.en || ''; // Default to English if object format
};
---

<article class="card card-glass card-interactive project-card group animate-in"
    data-title-en={typeof title === 'object' ? title?.en : title}
    data-title-es={typeof title === 'object' ? title?.es : title}
    data-desc-en={typeof description === 'object' ? description?.en : description}
    data-desc-es={typeof description === 'object' ? description?.es : description}>
    <div class="card-content p-4 sm:p-6 flex flex-col gap-y-3 sm:gap-y-4">
        <h3 class="text-lg sm:text-xl lg:text-2xl font-semibold flex items-center gap-x-3 group-hover:text-gradient transition-all duration-300">
            <span class="icon-wrapper flex-shrink-0 p-2 rounded-lg bg-gradient-to-br from-blue-500/20 to-purple-500/10 group-hover:scale-110 transition-transform duration-300">
                <svg class="w-5 h-5 sm:w-6 sm:h-6 text-blue-400 group-hover:brightness-125 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
            </span>
            <span class="project-title" set:html={getTitle(title)}></span>
        </h3>
        
        <p class="font-normal text-sm sm:text-base lg:text-lg text-gray-400 project-description group-hover:text-gray-300 transition-colors duration-300 leading-relaxed"
           set:html={getDescription(description)}></p>
        
        <div class="pt-2">
            <TagProjectPill tags={tags}/>
        </div>
    </div>
    
    <!-- Subtle glow effect on hover -->
    <div class="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-lg pointer-events-none"></div>
</article>

<script>
    import { currentLanguage } from '../../i18n/languageStore';
    
    function updateProjectsText() {
        const lang = currentLanguage.get();
        const projectCards = document.querySelectorAll('.project-card');
        
        projectCards.forEach(card => {
            const title = card.querySelector('.project-title');
            const description = card.querySelector('.project-description');
            
            if (title) {
                const titleText = card.getAttribute(`data-title-${lang}`);
                if (titleText) title.innerHTML = titleText;
            }
            
            if (description) {
                const descText = card.getAttribute(`data-desc-${lang}`);
                if (descText) description.innerHTML = descText;
            }
        });
    }
    
    function initProjectCards() {
        // Initial update
        updateProjectsText();
        
        // Update on language change
        currentLanguage.subscribe(updateProjectsText);
    }
    
    // Wait for DOM and then initialize
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initProjectCards);
    } else {
        // DOM is already loaded
        initProjectCards();
    }
    
    // Also listen for a custom event in case language is initialized later
    document.addEventListener('languageInitialized', updateProjectsText);
</script>
